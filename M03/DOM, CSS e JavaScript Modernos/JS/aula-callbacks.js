// Um callback Ã© uma funÃ§Ã£o passada como argumento para outra funÃ§Ã£o. O objetivo do callback Ã© executar uma aÃ§Ã£o dentro da funÃ§Ã£o externa, com a finalidade de manipular ou completar alguma rotina com os dados presentes dentro da funÃ§Ã£o externa, ou executar alguma lÃ³gica prÃ³pria dentro do escopo da funÃ§Ã£o externa.

const letters = [
    'a',
    'b',
    'c',
    'd',
    'e'
]

const showItems = (array, callbacak) => {
    for(let i = 0; i < array.length; i++) {
        const currentItem = array[i]

        callbacak(currentItem)
    }
}

showItems(letters, function(item) {
    console.log(item)
})

// ðŸ’ª Atividade - Criando uma Callback para uma FunÃ§Ã£o

console.log('ðŸ’ª Atividade - Criando uma Callback para uma FunÃ§Ã£o')

const sum = (num1, num2) => {
    return num1 + num2
}

const printResult = (result) => {
    console.log(`The result of the sum is: ${result}`)
}

const doSum = (num1, num2, callback) => {
    let result = num1 + num2
    callback(result)
}